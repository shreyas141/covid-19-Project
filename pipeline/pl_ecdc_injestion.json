{
	"name": "pl_ecdc_injestion",
	"properties": {
		"activities": [
			{
				"name": "copy ECDC data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "For each on lookup output",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ecdc_raw_csv_http",
						"type": "DatasetReference",
						"parameters": {
							"BaseURL": {
								"value": "@variables('sourceBaseURL')",
								"type": "Expression"
							},
							"RelativeURL": {
								"value": "@variables('sourceRelativeURL')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_ecdc_data_raw_csv_g2",
						"type": "DatasetReference",
						"parameters": {
							"dataset_name": {
								"value": "@variables('sinkFileName')",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lookup ECDC configs",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_ecdc_file_list",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For each on lookup output",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup ECDC configs",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup ECDC configs').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "set variable",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "sourceRelativeURL",
								"value": {
									"value": "@item().sourceRelativeURL",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable 2",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "sourceBaseURL",
								"value": {
									"value": "@item().sourceBaseURL",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable 3",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "sinkFileName",
								"value": {
									"value": "@item().sinkFileName",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"sourceRelativeURL": {
				"type": "String"
			},
			"sourceBaseURL": {
				"type": "String"
			},
			"sinkFileName": {
				"type": "String"
			}
		},
		"folder": {
			"name": "covid-19-project"
		},
		"annotations": []
	}
}